<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">
       
       <context:component-scan base-package="com.lemo.springDemo">
       		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
			<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
       </context:component-scan> 
       
       <!--扫描配置文件(这里指向的是之前配置的那个config.properties)-->
       <context:property-placeholder location="classpath:/project.properties" />
       
       <!--配置数据源-->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	      <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	      <property name="url" value="jdbc:mysql://${jdbc.host}:3306/${jdbc.database}?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull"/>
	      <property name="username" value="${jdbc.username}"/>
	      <property name="password" value="${jdbc.password}"/>
		   <!-- 配置初始化大小、最小、最大 -->
		   <property name="initialSize" value="5" />
		   <property name="minIdle" value="5" />
		   <property name="maxActive" value="10" />
		   <!-- 配置获取连接等待超时的时间 -->
		   <property name="maxWait" value="60000" />
		   <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		   <property name="timeBetweenEvictionRunsMillis" value="60000" />
		   <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		   <property name="minEvictableIdleTimeMillis" value="300000" />
		   <property name="validationQuery" value="SELECT 'x'" />
		   <property name="testWhileIdle" value="true" />
		   <property name="testOnBorrow" value="false" />
		   <property name="testOnReturn" value="false" />
		   <!-- 配置监控统计拦截的filters -->
		   <property name="filters" value="stat" />
	   </bean>
	   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
     		<property name="dataSource" ref="dataSource" />
	     	<!-- 设置Spring取那个包中查找相应的实体类，指定hibernate实体类映射文件 -->
		    <property name="packagesToScan">
		        <value>com.lemo.springDemo.model</value>
		    </property>
		    <property name="jpaVendorAdapter">
	            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
	        </property>
		    <property name="jpaProperties">
	            <props>
	                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
	                <prop key="hibernate.hbm2ddl.auto">update</prop>
	                <prop key="hibernate.show_sql">true</prop>
	                <prop key="hibernate.format_sql">false</prop>
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
	                
	                <prop key="hibernate.cache.use_second_level_cache">true</prop>
	                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
	                <prop key="hibernate.cache.use_query_cache">true</prop>
	            </props>
        	</property>
        	<!-- 配置使用二级缓存的模式：只允许带有 @Cacheable 的类使用二级缓存 -->
        	<property name="sharedCacheMode" value="ENABLE_SELECTIVE"></property>
		</bean>
		<bean id="transactionManager"  class="org.springframework.orm.jpa.JpaTransactionManager">      
		     <property name="entityManagerFactory"  ref="entityManagerFactory" />     
		</bean>  
   	 	<!-- 配置基于注解的事务 -->
    	<tx:annotation-driven transaction-manager="transactionManager"/>
	  
	  	<jpa:repositories base-package="com.lemo.springDemo.repository" entity-manager-factory-ref="entityManagerFactory"/>
</beans>
